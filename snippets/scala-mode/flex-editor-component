# -*- mode: snippet -*-
# name: flex-editor-component
# key: flex-editor-component
# --
package schaake.flex.client.$1

import japgolly.scalajs.react._
import japgolly.scalajs.react.vdom.html_<^._
import schaake.flex.client.dsl._
import schaake.client.components.Editor

object `(file-name-nondirectory (file-name-sans-extension (buffer-file-name)))` {
  object Style extends FlexBaseStyle {
    import dsl._

    val main = style(padding(1.em))
  }

  final case class Input($0) extends Editor.Model[${2:model}] {
    override def validate = errorCollector().invalidOr()
  }
  object Input {
    def empty(): Input = Input()
    def apply(m: $2): Input = Input()
  }

  type Props = Editor.Props[Input]

  private val component = ScalaComponent.builder[Props]("`(file-name-nondirectory (file-name-sans-extension (buffer-file-name)))`")
    .render_P(p => <.div("hello"))
    .build

  def apply(m: $2, onChange: Editor.OnChange[Input]) = component(new Props(Input(m), onChange))
  def apply(onChange: Editor.OnChange[Input]) = component(new Props(Input.empty(), onChange))
}